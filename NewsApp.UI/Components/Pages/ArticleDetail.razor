@page "/article/{id:guid}"
@using NewsApp.Shared.Models.Dto
@using MudBlazor
@using System.Net.Http.Json
@using NewsApp.Shared.Models.Dto.Coment
@inject HttpClient Http
@rendermode InteractiveServer


<MudContainer MaxWidth="MaxWidth.Large">

    @if (article == null)
    {
        <MudProgressLinear Indeterminate="true" Color="Color.Primary" />
        <MudText Typo="Typo.body1" Class="mt-3">Loading article...</MudText>
    }
    else
    {
        <MudCard Class="mb-3">
            <MudCardContent>
                <MudText Typo="Typo.h5">@article.Title</MudText>
                <MudText Typo="Typo.body2">@article.PublishDate.ToShortDateString()</MudText>
                <MudText Typo="Typo.body1" Class="mt-3">@article.Content</MudText>
            </MudCardContent>
        </MudCard>

        <MudText Typo="Typo.h6" Class="mt-5">Comments</MudText>

        <MudTextField @bind-Value="newComment" Label="Write a comment..." FullWidth="true" />

        <MudButton Color="Color.Primary" OnClick="AddComment" Class="mt-2">Post Comment</MudButton>

       
    }
</MudContainer>

@code {
    [Parameter] public Guid Id { get; set; }

    private ArticleDto? article;
    private string newComment = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"Page is loading... Article ID: {Id}");
        await FetchArticleDetails();
    }

    private async Task FetchArticleDetails()
    {
        try
        {
            article = await Http.GetFromJsonAsync<ArticleDto>($"http://localhost:5296/api/Articles/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching article: {ex.Message}");
        }
    }

    private void AddComment()
    {
        if (!string.IsNullOrEmpty(newComment))
        {
            article?.Comments.Add(new CommentDto
            {
                Content = newComment
            });

            newComment = string.Empty; 
        }
    }
}
