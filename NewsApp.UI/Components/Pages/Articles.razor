@rendermode InteractiveServer

@page "/news"



@using NewsApp.Shared.Models.Base
@using NewsApp.Shared.Models.Dto

@inject HttpClient Http

<PageTitle>Articles</PageTitle>

<h2>Articles List</h2>
<div class="card-container">

    @if (articles == null)
    {
        <p>Loading.. </p>
    }

    else
    {
        foreach (var articleDto in articles.Items)
        {
            <div class="card" @onclick=" () => ShowArticleDetails(articleDto)">
                <h3>@articleDto.Title</h3>
                <p>@(articleDto.Content.Length > 100 ? articleDto.Content.Substring(0, 100) + "..." : articleDto.Content)</p>
                <p>
                    <small>Published on: @articleDto.PublishDate.ToShortDateString()</small>
                </p>
            </div>
        }

        if (showModal)
        {
            <ArticleDetailModal Title="@selectedArticleTitle" Content="@selectedArticleContent" OnClose="CloseModal"/>
        }
    }

</div>


@code
{

    private DataCollectionApiResponseDto<ArticleDto> articles;
    private bool showModal = false;
    private string selectedArticleTitle;
    private string selectedArticleContent;

    private void ShowArticleDetails(ArticleDto article)
    {
        Console.WriteLine($"Clicked on article: {article.Title}");


        selectedArticleTitle = article.Title;
        selectedArticleContent = article.Content;
        showModal = true;
    }

    protected override async Task OnInitializedAsync()
    {
        //articles = await Http.GetFromJsonAsync<DataCollectionApiResponseDto<ArticleDto>>("api/Articles");

        articles = new DataCollectionApiResponseDto<ArticleDto>();

        var article1 = new ArticleDto
        {
            Id = Guid.NewGuid(),
            Title = "Article 1",
            Link = "https://example.com/article1",
            Content = "Content for article 1",
            PublishDate = DateTime.Now.AddDays(-1)
        };

        var article2 = new ArticleDto
        {
            Id = Guid.NewGuid(),
            Title = "Article 2",
            Link = "https://example.com/article2",
            Content = "Content for article 2",
            PublishDate = DateTime.Now.AddDays(-2)
        };

        var article3 = new ArticleDto
        {
            Id = Guid.NewGuid(),
            Title = "Article 3",
            Link = "https://example.com/article3",
            Content = "Content for article 3",
            PublishDate = DateTime.Now.AddDays(-3)
        };

        // Add articles to the Items list
        articles.Items.Add(article1);
        articles.Items.Add(article2);
        articles.Items.Add(article3);
    }

    private void CloseModal()
    {
        showModal = false;
    }


}


<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
    }
    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 16px;
        margin: 8px;
        flex: 1 1 300px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: background-color 0.3s;
    }
    .card:hover {
        background-color: #f0f0f0;
    }
</style>