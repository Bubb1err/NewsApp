@rendermode InteractiveServer

@inject NavigationManager Navigation

@page "/news"
@using System.Net.Http.Json
@using MudBlazor
@using NewsApp.Shared.Models.Base
@using NewsApp.Shared.Models.Dto
@inject HttpClient Http

<MudContainer MaxWidth="MaxWidth.Large">
    <MudText Typo="Typo.h4" Class="mb-4">Articles</MudText>

    @if (articles == null)
    {
        <MudProgressLinear Indeterminate="true" Color="Color.Primary" />
        <MudText Typo="Typo.body1" Class="mt-3">Loading articles...</MudText>
    }
    else if (!articles.Items.Any())
    {
        <MudText Typo="Typo.body1" Class="mt-3">No articles found.</MudText>
    }
    else
    {
    <MudList T="ArticleDto">
        @foreach (var article in articles.Items)
        {
        <MudListItem T="ArticleDto"  @onclick="() => NavigateToArticleDetail(article.Id)">
            <MudCard Class="mb-3">
                <MudCardContent>
                    <MudText Typo="Typo.h6">@article.Title</MudText>
                    <MudText Typo="Typo.body2">@article.PublishDate.ToShortDateString()</MudText>
                    <MudText Typo="Typo.body1">@article.Content.Substring(0, Math.Min(200, article.Content.Length))...</MudText>
                    
                    <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="@(IsLiked ? Color.Primary : Color.Dark)"  aria-label="Like" OnClick="ToggleLike"/>
                    <MudIconButton Icon="@Icons.Material.Filled.Bookmark" Color="Color.Dark" aria-label="Save" Edge="Edge.End" />
                </MudCardContent>
            </MudCard>
        </MudListItem>
        }
    </MudList>
    }
</MudContainer>

@code {
    private DataCollectionApiResponseDto<ArticleDto>? articles;

    private bool IsLiked = false;

    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            articles = await Http.GetFromJsonAsync<DataCollectionApiResponseDto<ArticleDto>>("http://localhost:5296/api/Articles");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching articles: {ex.Message}");
            articles = new DataCollectionApiResponseDto<ArticleDto>();
        }
    }

    private void ToggleLike()
    {
        IsLiked = !IsLiked;

    }
    private void NavigateToArticleDetail(Guid articleId)
    {
        Navigation.NavigateTo($"/article/{articleId}");
    }

}